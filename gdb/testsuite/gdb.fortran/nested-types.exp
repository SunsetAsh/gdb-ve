# Copyright 2005, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file was written by Richard Bunt. (richard.bunt@arm.com)

# This file is part of the gdb testsuite.  It contains tests for printing nested types.

if { [skip_fortran_tests] } { return -1 }
load_lib "fortran.exp"

standard_testfile ".f90"

if { [prepare_for_testing ${testfile}.exp ${testfile} ${srcfile} \
     {debug f90}] } {
    return -1
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

if ![fortran_gdb_start] {
    untested "could not run to main in: $testfile"
    return -1
}

set testplan [list \
"nested-types.f90:58" "p the_main_type" "\\\( i = -1, r = -1, iarr1d = \\\(-1, -1, -1\\\), rarr1d = \\\(-1, -1, -1\\\), iarr2d = \\\(\\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\), rarr2d = \\\(\\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\), iarr3dialloc2d = \\\(\\\( 3, 3, 3\\\) \\\( 3, 3, 3\\\) \\\( 3, 3, 3\\\) \\\( 3, 3, 3\\\) \\\( 3, 3, 3\\\) \\\), nested = \\\(\\\( i = -1, r = -1, iarr2d = \\\(\\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\) \\\), \\\( i = -1, r = -1, iarr2d = \\\(\\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\( -1, -1, -1\\\) \\\) \\\)\\\) \\\)" \
]

foreach {srcfile_and_line command output} $testplan {
    gdb_breakpoint $srcfile_and_line
    gdb_continue_to_breakpoint $srcfile_and_line
    gdb_test $command $output
}
